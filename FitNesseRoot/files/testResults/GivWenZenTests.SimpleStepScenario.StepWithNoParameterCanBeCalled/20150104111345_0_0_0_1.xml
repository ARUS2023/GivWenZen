<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20140901</FitNesseVersion>
  <rootPath>GivWenZenTests.SimpleStepScenario.StepWithNoParameterCanBeCalled</rootPath>
    <result>
    <counts>
      <right>0</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>3</exceptions>
    </counts>
    <runTimeInMillis>26</runTimeInMillis>
    <content>&lt;div class="collapsible closed"&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='#' class='expandall'&gt;Expand&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='#' class='collapseall'&gt;Collapse&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
	&lt;p class="title"&gt;Included page: &lt;a href="GivWenZenTests.SimpleStepScenario.SetUp"&gt;.GivWenZenTests.SimpleStepScenario.SetUp&lt;/a&gt; &lt;a href="GivWenZenTests.SimpleStepScenario.SetUp?edit&amp;amp;redirectToReferer=true&amp;amp;redirectAction=" class="edit"&gt;(edit)&lt;/a&gt;&lt;/p&gt;
	&lt;div&gt;&lt;a href="FrontPage"&gt;GivWenZen&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;import&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;span class="pass"&gt;org.givwenzen&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td colspan="2"&gt;script&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;start&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;giv wen zen for slim&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="hidden"&gt;
		&lt;td colspan="2"&gt;script&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="exception closed"&gt;
		&lt;td class="error"&gt;given&lt;/td&gt;
		&lt;td class="error"&gt;a step annotated with 'simple no parameter step' that does not take a parameter&lt;/td&gt;
	&lt;/tr&gt;&lt;tr class="exception-detail closed-detail"&gt;&lt;td colspan="2"&gt;&lt;pre&gt;__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'a step annotated with 'simple no parameter step' that does not take a parameter'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("a step annotated with 'simple no parameter step' that does not take a parameter")
    public void domainStep() {
      // TODO implement step
    }
  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

Methods with similar patterns:
	at fitnesse.slim.StackTraceEnricher.getStackTraceAsString(StackTraceEnricher.java:39) [fitnesse.jar]
	at fitnesse.slim.SlimException.toString(SlimException.java:104) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.marshalObjectToString(SlimSerializer.java:53) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:36) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:28) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.marshalObjectToString(SlimSerializer.java:51) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:36) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:28) [fitnesse.jar]
	at fitnesse.slim.SlimServer.sendResultsToClient(SlimServer.java:111) [fitnesse.jar]
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:96) [fitnesse.jar]
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:68) [fitnesse.jar]
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:54) [fitnesse.jar]
	at fitnesse.slim.SlimServer.serve(SlimServer.java:40) [fitnesse.jar]
	at fitnesse.slim.SlimService.handle(SlimService.java:164) [fitnesse.jar]
	at fitnesse.slim.SlimService.acceptOne(SlimService.java:172) [fitnesse.jar]
	at fitnesse.slim.SlimService.accept(SlimService.java:134) [fitnesse.jar]
	at fitnesse.slim.SlimService.startWithFactory(SlimService.java:65) [fitnesse.jar]
	at fitnesse.slim.SlimService.main(SlimService.java:51) [fitnesse.jar]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr class="exception closed"&gt;
		&lt;td class="error"&gt;when&lt;/td&gt;
		&lt;td class="error"&gt;the step 'simple no parameter step' is called&lt;/td&gt;
	&lt;/tr&gt;&lt;tr class="exception-detail closed-detail"&gt;&lt;td colspan="2"&gt;&lt;pre&gt;__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'the step 'simple no parameter step' is called'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("the step 'simple no parameter step' is called")
    public void domainStep() {
      // TODO implement step
    }
  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

Methods with similar patterns:
	at fitnesse.slim.StackTraceEnricher.getStackTraceAsString(StackTraceEnricher.java:39) [fitnesse.jar]
	at fitnesse.slim.SlimException.toString(SlimException.java:104) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.marshalObjectToString(SlimSerializer.java:53) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:36) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:28) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.marshalObjectToString(SlimSerializer.java:51) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:36) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:28) [fitnesse.jar]
	at fitnesse.slim.SlimServer.sendResultsToClient(SlimServer.java:111) [fitnesse.jar]
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:96) [fitnesse.jar]
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:68) [fitnesse.jar]
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:54) [fitnesse.jar]
	at fitnesse.slim.SlimServer.serve(SlimServer.java:40) [fitnesse.jar]
	at fitnesse.slim.SlimService.handle(SlimService.java:164) [fitnesse.jar]
	at fitnesse.slim.SlimService.acceptOne(SlimService.java:172) [fitnesse.jar]
	at fitnesse.slim.SlimService.accept(SlimService.java:134) [fitnesse.jar]
	at fitnesse.slim.SlimService.startWithFactory(SlimService.java:65) [fitnesse.jar]
	at fitnesse.slim.SlimService.main(SlimService.java:51) [fitnesse.jar]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr class="exception closed"&gt;
		&lt;td class="error"&gt;then&lt;/td&gt;
		&lt;td class="error"&gt;the step 'simple no parameter step' executes successfully&lt;/td&gt;
	&lt;/tr&gt;&lt;tr class="exception-detail closed-detail"&gt;&lt;td colspan="2"&gt;&lt;pre&gt;__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'the step 'simple no parameter step' executes successfully'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("the step 'simple no parameter step' executes successfully")
    public void domainStep() {
      // TODO implement step
    }
  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

Methods with similar patterns:
	at fitnesse.slim.StackTraceEnricher.getStackTraceAsString(StackTraceEnricher.java:39) [fitnesse.jar]
	at fitnesse.slim.SlimException.toString(SlimException.java:104) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.marshalObjectToString(SlimSerializer.java:53) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:36) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:28) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.marshalObjectToString(SlimSerializer.java:51) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:36) [fitnesse.jar]
	at fitnesse.slim.protocol.SlimSerializer.serialize(SlimSerializer.java:28) [fitnesse.jar]
	at fitnesse.slim.SlimServer.sendResultsToClient(SlimServer.java:111) [fitnesse.jar]
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:96) [fitnesse.jar]
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:68) [fitnesse.jar]
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:54) [fitnesse.jar]
	at fitnesse.slim.SlimServer.serve(SlimServer.java:40) [fitnesse.jar]
	at fitnesse.slim.SlimService.handle(SlimService.java:164) [fitnesse.jar]
	at fitnesse.slim.SlimService.acceptOne(SlimService.java:172) [fitnesse.jar]
	at fitnesse.slim.SlimService.accept(SlimService.java:134) [fitnesse.jar]
	at fitnesse.slim.SlimService.startWithFactory(SlimService.java:65) [fitnesse.jar]
	at fitnesse.slim.SlimService.main(SlimService.java:51) [fitnesse.jar]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;h3&gt;See also:&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href="http://code.google.com/p/givwenzen/source/browse/trunk/src/test/java/bdd/steps/SimpleTestSteps.java"&gt;http://code.google.com/p/givwenzen/source/browse/trunk/src/test/java/bdd/steps/SimpleTestSteps.java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <relativePageName>StepWithNoParameterCanBeCalled</relativePageName>
            <instructions>
            <instructionResult>
        <instruction>{id='import_0_0', instruction='import', path='org.givwenzen'}</instruction>
        <slimResult>pass(org.givwenzen)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>import_0_0</instructionId>
                    <col>0</col>
                              <row>1</row>
                    <type>ImportExpectation</type>
                                        <evaluationMessage>org.givwenzen</evaluationMessage>
                  </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_1_0', instruction='make', instanceName='scriptTableActor', className='GivWenZenForSlim', args=[]}</instruction>
        <slimResult>pass(giv wen zen for slim)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>scriptTable_1_0</instructionId>
                    <col>1</col>
                              <row>1</row>
                    <type>ConstructionExpectation</type>
                                        <evaluationMessage>giv wen zen for slim</evaluationMessage>
                  </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_2_0', instruction='call', instanceName='scriptTableActor', methodName='given', args=[a step annotated with 'simple no parameter step' that does not take a parameter]}</instruction>
        <slimResult></slimResult>
                <expectation>
                    <status>error</status>
                    <instructionId>scriptTable_2_0</instructionId>
                              <type>ScriptActionExpectation</type>
                                      </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_2_1', instruction='call', instanceName='scriptTableActor', methodName='when', args=[the step 'simple no parameter step' is called]}</instruction>
        <slimResult></slimResult>
                <expectation>
                    <status>error</status>
                    <instructionId>scriptTable_2_1</instructionId>
                              <type>ScriptActionExpectation</type>
                                      </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_2_2', instruction='call', instanceName='scriptTableActor', methodName='then', args=[the step 'simple no parameter step' executes successfully]}</instruction>
        <slimResult></slimResult>
                <expectation>
                    <status>error</status>
                    <instructionId>scriptTable_2_2</instructionId>
                              <type>ScriptActionExpectation</type>
                                      </expectation>
              </instructionResult>
          </instructions>
      </result>
      <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>1</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>26</totalRunTimeInMillis>
  
</testResults>

